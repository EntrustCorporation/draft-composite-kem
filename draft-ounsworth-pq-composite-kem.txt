



LAMPS                                                       M. Ounsworth
Internet-Draft                                                   J. Gray
Intended status: Standards Track                                 Entrust
Expires: September 25, 2022                               March 24, 2022


                 Composite KEM For Use In Internet PKI
                  draft-ounsworth-pq-composite-kem-00

Abstract

   With the widespread adoption of post-quantum cryptography will come
   the need for an entity to possess multiple public keys on different
   cryptographic algorithms.  Since the trustworthiness of individual
   post-quantum algorithms is at question, a multi-key cryptographic
   operation will need to be performed in such a way that breaking it
   requires breaking each of the component algorithms individually.
   This requires defining new procedures for key encapsulation.

   This document defines a Composite key encapsulation mechanism (KEM)
   procedure, for use with Composite keys which consist of combinations
   of Encryption or KEM algorithms for each composite component
   algorithm.

   This document is intended to be coupled with the composite keys
   structure define in [draft-ounsworth-pq-composite-keys-01] and the
   CMS KEM-TRANS mechanism in [draft-perret-prat-lamps-cms-pq-kem-00].

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 25, 2022.







Ounsworth & Gray       Expires September 25, 2022               [Page 1]

Internet-Draft              PQ Composite Keys                 March 2022


Copyright Notice

   Copyright (c) 2022 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.1.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   4
   2.  Composite Key Encapsulation . . . . . . . . . . . . . . . . .   4
   3.  Composite Key Decapsulation . . . . . . . . . . . . . . . . .   5
     3.1.  Composite KEM CipherText Encoding . . . . . . . . . . . .   6
     3.2.  Generic vs Explicit Variants  . . . . . . . . . . . . . .   6
     3.3.  Combiner Modes  . . . . . . . . . . . . . . . . . . . . .   6
       3.3.1.  AND Mode  . . . . . . . . . . . . . . . . . . . . . .   7
       3.3.2.  OR Mode . . . . . . . . . . . . . . . . . . . . . . .   7
       3.3.3.  ANY Mode  . . . . . . . . . . . . . . . . . . . . . .   7
       3.3.4.  K of N Mode . . . . . . . . . . . . . . . . . . . . .   8
       3.3.5.  Custom Modes  . . . . . . . . . . . . . . . . . . . .   9
   4.  In Practice . . . . . . . . . . . . . . . . . . . . . . . . .   9
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   9
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .   9
     6.1.  Policy for Deprecated and Acceptable Algorithms . . . . .   9
     6.2.  APOP Attack on concatenated keys  . . . . . . . . . . . .  10
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  10
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .  10
     7.2.  Informative References  . . . . . . . . . . . . . . . . .  12
   Appendix A.  Examples . . . . . . . . . . . . . . . . . . . . . .  12
   Appendix B.  ASN.1 Module . . . . . . . . . . . . . . . . . . . .  12
   Appendix C.  Intellectual Property Considerations . . . . . . . .  14
   Appendix D.  Contributors and Acknowledgements  . . . . . . . . .  14
     D.1.  Making contributions  . . . . . . . . . . . . . . . . . .  15
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  15








Ounsworth & Gray       Expires September 25, 2022               [Page 2]

Internet-Draft              PQ Composite Keys                 March 2022


1.  Introduction

   During the transition to post-quantum cryptography, there will be
   uncertainty as to the strength of cryptographic algorithms; we will
   no longer fully trust traditional cryptography such as RSA, Diffie-
   Hellman, DSA and their elliptic curve variants, but we will also not
   fully trust their post-quantum replacements until they have had
   sufficient scrutiny.  Unlike previous cryptographic algorithm
   migrations, the choice of when to migrate and which algorithms to
   migrate to, is not so clear.  Even after the migration period, it may
   be advantageous for an entity's cryptographic identity to be composed
   of multiple public-key algorithms.

   The deployment of composite public keys, and composite signatures and
   composite encryption using post-quantum algorithms will face two
   challenges

   o  Algorithm strength uncertainty: During the transition period, some
      post-quantum signature and encryption algorithms will not be fully
      trusted, while also the trust in legacy public key algorithms will
      start to erode.  A relying party may learn some time after
      deployment that a public key algorithm has become untrustworthy,
      but in the interim, they may not know which algorithm an adversary
      has compromised.

   o  Migration: During the transition period, systems will require
      mechanisms that allow for staged migrations from fully classical
      to fully post-quantum-aware cryptography.

   This document provides a mechanism to address both algorithm strength
   uncertainty as well as migration concerns by providing formats for
   encoding multiple public keys and private keys values into existing
   public key and private key fields.

   This document is intended for general applicability anywhere that
   keys are used within PKIX or CMS structures.

   EDNOTE A previous version of this draft specified alternate algorithm
   identifiers for AND and OR modes.  As well, a similar spec by D-Trust
   (now co-authors of this draft) also specified a "K of N" mode.  In
   this version of this draft, we have moved those from being top-level
   OIDs to being algorithm parameters since we can then leverage the
   same mechanism for both generic and explicit composite modes.








Ounsworth & Gray       Expires September 25, 2022               [Page 3]

Internet-Draft              PQ Composite Keys                 March 2022


1.1.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   The following terms are used in this document:

   ALGORITHM: An information object class for identifying the type of
   cryptographic key being encapsulated.

   BER: Basic Encoding Rules (BER) as defined in [X.690].

   CLIENT: Any software that is making use of a key at runtime.  This
   includes a signer, verifyir, encryptor, decryptor.

   COMBINER MODE: A combiner mode specifies how keys are to be combined
   together into a single cryptographic operation.  Examples include
   AND, OR, K-of-N.  Specifications of composite signature or encryption
   proceedures will need to specify the behaviour under each mode.

   COMPONENT ALGORITHM: A single basic algorithm which is contained
   within a composite algorithm.

   COMPOSITE ALGORITHM: An algorithm which is a sequence of two or more
   component algorithms.

   DER: Distinguished Encoding Rules as defined in [X.690].

   KEM: --- borrow the brilliant defintion in tls-hybrid-design or
   authKEM drafts.

   PUBLIC / PRIVATE KEY: The public and private portion of an asymmetric
   cryptographic key, making no assumptions about which algorithm.

2.  Composite Key Encapsulation

   Composite key encapsulations takes a CompositePublicKey as its input.
   The CompositePublicKey MUST contain composite keys (Pi .. Pn) which
   represent an algorithm which is a KEM (Key Encapsulation Method), or
   an algorithm that contains encryption or decryption primitive.  For
   example (RSA).

   This operation outputs a shared-secret and cipher text.  If the
   CompositePublicKey is using an algorithm mode which does not require
   all keys to be used (for example id-composite-or or id-composite-k-



Ounsworth & Gray       Expires September 25, 2022               [Page 4]

Internet-Draft              PQ Composite Keys                 March 2022


   of-n), and the specific component algorithm is not required by the
   underlying application usage, then the ciphertext and shared secret
   for that component is empty.

   Input:  CompositePublicKey (PK1, PK2 .. PKn)

   Output:  SS, CT

   1.  for i := 1 to n
       a. if PKi is to be skipped
           CTi := emptyOctetString
           SSi := emptyOctetString
           continue to next i

       b. if Pki is of type KEM:
             SSi,CTi := encaps(PKi)

         Else:
           SSi := random_bits(SIZE)
           CTi := encrypt(SSi, PKi)

     2.   SS = SSi ||  SSn
         CT = CT1, CT2, .., CTn

3.  Composite Key Decapsulation

   Composite key decapsulations takes a CompositePrivateKey as its input
   and the sequence of Cipher texts (ct1 .. ctn) computed by the
   composite key encapsulation method.  The CompositePrivateKey MUST
   contain composite keys (Pi .. Pn) which represent an algorithm which
   is a KEM (Key Encapsulation Method), or an algorithm that contains
   encryption or decryption primitive.  These keys MUST consist of the
   same component keys in the same order as the Composite Key
   Encapsulation process that generated them.

   This operation outputs a shared-secret.  If the CompositePrivateKey
   is using an algorithm mode which does not require all keys to be used
   the specific component algorithm is not required by the underlying
   application usage, then the ciphertext and shared secret for that
   component is empty.











Ounsworth & Gray       Expires September 25, 2022               [Page 5]

Internet-Draft              PQ Composite Keys                 March 2022


   Input:   CompositePrivateKey = SK1, SK2 .. SKn
             CT = CT1, CT2, .., CTn

   Output:  SS

   1.    for i := 1 to n
         if Ski is not required and cti = emptyOctetString
             SSi := emptyOctetString
         Else, if SKi is of type KEM:
             SSi := decaps(Cti, SKi)
         Else:
             SSi := decrypt(Cti, SKi)

   2. Output SS = SSi ||  SSn

3.1.  Composite KEM CipherText Encoding

   For ease of use when encoding and decoding, the following encoding is
   suggested for the CipherText.

   CompositeKemCT :: SEQUENCE SIZE (2..MAX) of OctetString

   This will allow implementations a simple and uniform way to
   distribute the set of Cipher texts required for the decapsulation
   process.
   It is not mandatory as an implementation could choose to store the
   set of Cipher texts produced in a different format, so long as they
   are available at time of decapsulation.

3.2.  Generic vs Explicit Variants

   TBD if we need to say anything, or if it's all covered already by the
   keys draft.

3.3.  Combiner Modes

   TBD -- need to define alternate processes for each combiner mode.
   This text currently just copied from the keys draft.

   Once an end entity has been issued multiple public keys, it is easy
   to imagine different modes and policies for using these keys.  For
   example a logical AND would provide the strictest security by
   requiring any usage of a composite key to always use all component
   keys.  Meanwhile, a logical OR would provide the greatest migration
   flexibility by allowing any component key to be used by itself.
   There can also be modes in between the two extremes such as a "K of
   N" mode, or a policy explicitly listing acceptable combinations of
   algorithms.



Ounsworth & Gray       Expires September 25, 2022               [Page 6]

Internet-Draft              PQ Composite Keys                 March 2022


   A combiner mode is represented in a composite public key by an
   OPTIONAL AlgorithmIdentifier where the semantics are defined in the
   following sections.  Any signature or encryption processes that make
   use of these modes need to define the precise behaviour under each
   mode.

3.3.1.  AND Mode

   Indicated by leaving the algorithm parameters ABSENT.

   The intention of this mode is that any cryptographic operation
   involving this composite key MUST use all component keys.  This mode
   is intended to provide the strictest security and for that reason it
   is the default mode.

3.3.2.  OR Mode

   Indicated by CompositeParams with and algorithm equal to:

id-composite-or OBJECT IDENTIFIER ::= {
  joint-iso-itu-t(2) country(16) us(840) organization(1) entrust(114027)
  Algorithm(80) Composite(4) id-composite-or(3) }

   EDNOTE: this is a temporary OID for the purposes of prototyping.  We
   are requesting IANA to assign a permanent OID, see Section 5.

   The parameters of the CompositeParams MUST be ABSENT.

   The intention of this mode is that any one component MAY be used by
   itself; senders MAY use more than one component key but receivers
   only need to use one to verify or recover the plaintext message.
   This mode is intended to provide the greatest migration and
   transition flexibility.

   EDNOTE: Potential problem with this mode: logically, as long as the
   client understands at least one of the component OIDs, but with the
   structure SEQUENCE OF SubjectPublicKeyInfo it is likely that most
   ASN.1 parsers will fail on an unrecognized OID.  For more discussion
   on this point, see: https://github.com/EntrustCorporation/draft-
   ounsworth-pq-composite-keys/issues/4

3.3.3.  ANY Mode

   Indicated by CompositeParams with and algorithm equal to:

id-composite-any OBJECT IDENTIFIER ::= {
  joint-iso-itu-t(2) country(16) us(840) organization(1) entrust(114027)
  Algorithm(80) Composite(4) id-composite-any(7) }



Ounsworth & Gray       Expires September 25, 2022               [Page 7]

Internet-Draft              PQ Composite Keys                 March 2022


   EDNOTE: this is a temporary OID for the purposes of prototyping.  We
   are requesting IANA to assign a permanent OID, see Section 5.

   The parameters of the CompositeParams MUST be ABSENT.

   The intention of this mode is for use-cases where the combiner mode
   is explicitly not carried in the public key and applications need to
   retrieve the combiner mode from application context, for example from
   application policy.

3.3.4.  K of N Mode

   Indicated by CompositeParams with and algorithm equal to:

id-composite-k-of-n OBJECT IDENTIFIER ::= {
  joint-iso-itu-t(2) country(16) us(840) organization(1) entrust(114027)
  Algorithm(80) Composite(4) id-composite-k-of-n(2)  }

   EDNOTE: this is a temporary OID for the purposes of prototyping.  We
   are requesting IANA to assign a permanent OID, see Section 5.

   The parameters of the CompositeParams MUST be CompositeKofNParams:

   CompositeKofNParams ::= INTEGER

   The intention of this mode is for use-cases where a subset or
   threshold scheme is desired.  The value in CompositeKofNParams is K,
   the number of component keys to be used in a single cryptographic
   operation.  The total number of component keys, N, is not carried in
   the CompositeKofNParams and can be infered either by parsing the
   CompositePublicKey structure as defined in , or in the case of the
   explicit composite variant, N may be known based on the PUBLIC-KEY
   IDENTIFIER.

   Clients SHOULD NOT use K of N mode with K = N as it is semantically
   equivalent to the AND mode defined in .

   Clients SHOULD NOT use K of N mode with K = 1 as it is semantically
   equivanent to the OR mode defined in .

   The intention is to improve interoperability between clients that
   support K of N mode and those that only support AND or OR mode.  The
   signature and encryption processes for K of N mode are more complex
   to implement than the respective AND and OR modes, and in most cases
   they would be a superset of the respective AND and OR modes, so it is
   assumed that any client that supports K of N mode will also support
   AND and OR modes.  The converse is not true; for example a simple
   client may only support AND mode and would reject a K of N mode with



Ounsworth & Gray       Expires September 25, 2022               [Page 8]

Internet-Draft              PQ Composite Keys                 March 2022


   K = N even though it is semantically equivalent to a mode that it
   supports.  Therefore clients that support K of N mode SHOULD use AND
   mode () and OR mode () in place of K of N mode with K = N and K = 1
   respectively.

3.3.5.  Custom Modes

   Protocol designers and implementors are free to define other combiner
   modes.

4.  In Practice

   This section addresses practical issues of how this draft affects
   other protocols and standards.

   EDNOTE 10: Possible topics to address:

   o  The size of these certs and cert chains.

   o  In particular, implications for (large) composite keys /
      signatures / certs on the handshake stages of TLS and IKEv2.

   o  If a cert in the chain is a composite cert then does the whole
      chain need to be of composite Certs?

   o  We could also explain that the root CA cert does not have to be of
      the same algorithms.  The root cert SHOULD NOT be transferred in
      the authentication exchange to save transport overhead and thus it
      can be different than the intermediate and leaf certs.

   o  We could talk about overhead (size and processing).

   o  We could also discuss backwards compatibility.

   o  We could include a subsection about implementation considerations.

5.  IANA Considerations

   The ASN.1 module OID is TBD.

6.  Security Considerations

6.1.  Policy for Deprecated and Acceptable Algorithms

   Traditionally, a public key, certificate, or signature contains a
   single cryptographic algorithm.  If and when an algorithm becomes
   deprecated (for example, RSA-512, or SHA1), it is obvious that
   structures using that algorithm are implicitly revoked.



Ounsworth & Gray       Expires September 25, 2022               [Page 9]

Internet-Draft              PQ Composite Keys                 March 2022


   In the composite model this is less obvious since implementers may
   decide that certain cryptographic algorithms have complementary
   security properties and are acceptable in combination even though one
   or both algorithms are deprecated for individual use.  As such, a
   single composite public key, certificate, signature, or ciphertext
   may contain a mixture of deprecated and non-deprecated algorithms.

   Specifying behaviour in these cases is beyond the scope of this
   document, but should be considered by implementors and potentially in
   addiniotal standards.

   EDNOTE: Max is working on a CRL mechanism to accomplish this.

6.2.  APOP Attack on concatenated keys

   See the attack analysis described in [Avirom2021].

   A possible fix, which aligns with [I-D.draft-ietf-tls-hybrid-design],
   would be to have all KEM algorithm definitions for use in CMS specify
   a fixed output length for the shared secret it produces, this would
   preclude attackers at runtime from manipulating the length of a
   shared secret so that the next one in the concatenation falls on a
   hash block boundary, which closes the attack mentioned above.

   A natural place to do this would be in [I-D.draft-turner-lamps-nist-
   pqc-kem-certificates].

7.  References

7.1.  Normative References

   [I-D.ounsworth-pq-composite-keys]
              Ounsworth, M. and M. Pala, "Composite Public and Private
              Keys For Use In Internet PKI", draft-ounsworth-pq-
              composite-keys-01 (work in progress), February 2022.

   [I-D.perret-prat-lamps-cms-pq-kem]
              Perret, L., Prat, J., and M. Ounsworth, "Use of Post-
              Quantum KEM in the Cryptographic Message Syntax (CMS)",
              draft-perret-prat-lamps-cms-pq-kem-00 (work in progress),
              November 2021.

   [RFC1421]  Linn, J., "Privacy Enhancement for Internet Electronic
              Mail: Part I: Message Encryption and Authentication
              Procedures", RFC 1421, DOI 10.17487/RFC1421, February
              1993, <https://www.rfc-editor.org/info/rfc1421>.





Ounsworth & Gray       Expires September 25, 2022              [Page 10]

Internet-Draft              PQ Composite Keys                 March 2022


   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC2986]  Nystrom, M. and B. Kaliski, "PKCS #10: Certification
              Request Syntax Specification Version 1.7", RFC 2986,
              DOI 10.17487/RFC2986, November 2000,
              <https://www.rfc-editor.org/info/rfc2986>.

   [RFC4210]  Adams, C., Farrell, S., Kause, T., and T. Mononen,
              "Internet X.509 Public Key Infrastructure Certificate
              Management Protocol (CMP)", RFC 4210,
              DOI 10.17487/RFC4210, September 2005,
              <https://www.rfc-editor.org/info/rfc4210>.

   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, DOI 10.17487/RFC5280, May 2008,
              <https://www.rfc-editor.org/info/rfc5280>.

   [RFC5652]  Housley, R., "Cryptographic Message Syntax (CMS)", STD 70,
              RFC 5652, DOI 10.17487/RFC5652, September 2009,
              <https://www.rfc-editor.org/info/rfc5652>.

   [RFC5912]  Hoffman, P. and J. Schaad, "New ASN.1 Modules for the
              Public Key Infrastructure Using X.509 (PKIX)", RFC 5912,
              DOI 10.17487/RFC5912, June 2010,
              <https://www.rfc-editor.org/info/rfc5912>.

   [RFC5914]  Housley, R., Ashmore, S., and C. Wallace, "Trust Anchor
              Format", RFC 5914, DOI 10.17487/RFC5914, June 2010,
              <https://www.rfc-editor.org/info/rfc5914>.

   [RFC5958]  Turner, S., "Asymmetric Key Packages", RFC 5958,
              DOI 10.17487/RFC5958, August 2010,
              <https://www.rfc-editor.org/info/rfc5958>.

   [RFC7468]  Josefsson, S. and S. Leonard, "Textual Encodings of PKIX,
              PKCS, and CMS Structures", RFC 7468, DOI 10.17487/RFC7468,
              April 2015, <https://www.rfc-editor.org/info/rfc7468>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.





Ounsworth & Gray       Expires September 25, 2022              [Page 11]

Internet-Draft              PQ Composite Keys                 March 2022


   [RFC8411]  Schaad, J. and R. Andrews, "IANA Registration for the
              Cryptographic Algorithm Object Identifier Range",
              RFC 8411, DOI 10.17487/RFC8411, August 2018,
              <https://www.rfc-editor.org/info/rfc8411>.

   [X.690]    ITU-T, "Information technology - ASN.1 encoding Rules:
              Specification of Basic Encoding Rules (BER), Canonical
              Encoding Rules (CER) and Distinguished Encoding Rules
              (DER)", ISO/IEC 8825-1:2015, November 2015.

7.2.  Informative References

   [Avirom2021]
              "Concatenating Secrets May Be Dangerous", n.d.,
              <https://github.com/nimia/kdf_public>.

   [Bindel2017]
              Bindel, N., Herath, U., McKague, M., and D. Stebila,
              "Transitioning to a quantum-resistant public key
              infrastructure", 2017, <https://link.springer.com/
              chapter/10.1007/978-3-319-59879-6_22>.

Appendix A.  Examples

   TBD

Appendix B.  ASN.1 Module

   TBD -- UPDATE

<CODE STARTS>

Composite-Keys-2022
  { TBD }

DEFINITIONS IMPLICIT TAGS ::= BEGIN

EXPORTS ALL;

IMPORTS
  PUBLIC-KEY, SIGNATURE-ALGORITHM
    FROM AlgorithmInformation-2009  -- RFC 5912 [X509ASN1]
      { iso(1) identified-organization(3) dod(6) internet(1)
        security(5) mechanisms(5) pkix(7) id-mod(0)
        id-mod-algorithmInformation-02(58) }

  SubjectPublicKeyInfo
    FROM PKIX1Explicit-2009



Ounsworth & Gray       Expires September 25, 2022              [Page 12]

Internet-Draft              PQ Composite Keys                 March 2022


      { iso(1) identified-organization(3) dod(6) internet(1)
        security(5) mechanisms(5) pkix(7) id-mod(0)
        id-mod-pkix1-explicit-02(51) }

  OneAsymmetricKey
    FROM AsymmetricKeyPackageModuleV1
      { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)
        pkcs-9(9) smime(16) modules(0)
        id-mod-asymmetricKeyPkgV1(50) } ;

--
-- Object Identifiers
--

-- To be replaced by IANA
id-composite-key OBJECT IDENTIFIER ::= {
  iso(1) identified-organization(3) dod(6) internet(1) private(4)
  enterprise(1) OpenCA(18227) algorithms(2) id-pk-compositeCrypto(1) }

--
-- Public Key
--

pk-Composite PUBLIC-KEY ::= {
    id id-composite-key,
    KeyValue CompositePublicKey,
    Params CompositeParams ARE OPTIONAL,
    PrivateKey CompositePrivateKey,
}

CompositePublicKey ::= SEQUENCE SIZE (2..MAX) OF SubjectPublicKeyInfo

CompositePublicKeyOs ::= OCTET STRING (CONTAINING CompositePublicKey
                                            ENCODED BY der)

CompositePublicKeyBs ::= BIT STRING (CONTAINING CompositePublicKey
                                            ENCODED BY der)

CompositePrivateKey ::= SEQUENCE SIZE (2..MAX) OF OneAsymmetricKey


-- pk-explicitComposite - Composite public key information object

pk-explicitComposite{OBJECT IDENTIFIER:id, PUBLIC-KEY:firstPublicKey,
  FirstPublicKeyType, PUBLIC-KEY:secondPublicKey, SecondPublicKeyType}
  PUBLIC-KEY ::= {
    IDENTIFIER id
    KEY ExplicitCompositePublicKey{firstPublicKey, FirstPublicKeyType,



Ounsworth & Gray       Expires September 25, 2022              [Page 13]

Internet-Draft              PQ Composite Keys                 March 2022


      secondPublicKey, SecondPublicKeyType}
    PARAMS ARE absent
}

   The following ASN.1 object class then automatically generates the
   public key structure from the types defined in pk-explicitComposite.

-- ExplicitCompositePublicKey - The data structure for a composite
-- public key sec-composite-pub-keys and SecondPublicKeyType are needed
-- because PUBLIC-KEY contains a set of public key types, not a single
-- type.
-- TODO The parameters should be optional only if they are marked
-- optional in the PUBLIC-KEY


ExplicitCompositePublicKey{PUBLIC-KEY:firstPublicKey, FirstPublicKeyType,
  PUBLIC-KEY:secondPublicKey, SecondPublicKeyType} ::= SEQUENCE {
    firstPublicKey SEQUENCE {
        params firstPublicKey.&Params OPTIONAL,
        publicKey FirstPublicKeyType
    },
    secondPublicKey SEQUENCE {
        params secondPublicKey.&Params OPTIONAL,
        publicKey SecondPublicKeyType
    }
}

END

<CODE ENDS>


Appendix C.  Intellectual Property Considerations

   The following IPR Disclosure relates to this draft:

   https://datatracker.ietf.org/ipr/3588/

Appendix D.  Contributors and Acknowledgements

   This document incorporates contributions and comments from a large
   group of experts.  The Editors would especially like to acknowledge
   the expertise and tireless dedication of the following people, who
   attended many long meetings and generated millions of bytes of
   electronic mail and VOIP traffic over the past year in pursuit of
   this document:

   Serge Mister (Entrust), Douglas Stebila (University of Waterloo).



Ounsworth & Gray       Expires September 25, 2022              [Page 14]

Internet-Draft              PQ Composite Keys                 March 2022


   We are grateful to all, including any contributors who may have been
   inadvertently omitted from this list.

   This document borrows text from similar documents, including those
   referenced below.  Thanks go to the authors of those documents.
   "Copying always makes things easier and less error prone" -
   [RFC8411].

D.1.  Making contributions

   Additional contributions to this draft are weclome.  Please see the
   working copy of this draft at, as well as open issues at:

   https://github.com/EntrustCorporation/draft-composite-kem/

Authors' Addresses

   Mike Ounsworth
   Entrust Limited
   2500 Solandt Road -- Suite 100
   Ottawa, Ontario  K2K 3G5
   Canada

   Email: mike.ounsworth@entrust.com


   John Gray
   Entrust Limited

   Email: john.gray@entrust.com





















Ounsworth & Gray       Expires September 25, 2022              [Page 15]
